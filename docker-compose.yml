version: '3.8'
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    restart: unless-stopped
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    restart: unless-stopped
    environment:
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - JWT_PUBLIC_KEY_PATH=${JWT_PUBLIC_KEY_PATH}
      - REDIS_ADDR=${REDIS_ADDR}
      - JAEGER_ENDPOINT=${JAEGER_ENDPOINT}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ${JWT_PUBLIC_KEY_PATH}:/app/keys/jwt_public.pem:ro
    depends_on:
      - auth-service
      - user-service

  auth-service:
    build: ./auth-service
    ports:
      - "8000:8000"
    restart: unless-stopped
    environment:
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - JWT_PRIVATE_KEY_PATH=${JWT_PRIVATE_KEY_PATH}
    volumes:
      - ${JWT_PRIVATE_KEY_PATH}:/app/keys/jwt_private.pem:ro
    depends_on:
      - user-service

  user-service:
    build: ./user-service
    ports:
      - "8001:8001"
    restart: unless-stopped
  
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - prometheus

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "16686:16686"
      - "14268:14268"
    restart: unless-stopped

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf.dev.template:/etc/nginx/nginx.conf.dev.template:ro
      - ./nginx/nginx.conf.prod.template:/etc/nginx/nginx.conf.prod.template:ro
      - ./nginx/entrypoint.sh:/entrypoint.sh:ro
      - ${NGINX_CERT_ORIGIN}:/etc/nginx/certs/nginx.crt:ro
      - ${NGINX_KEY_ORIGIN}:/etc/nginx/certs/nginx.key:ro
    environment:
      - NGINX_MODE=${NGINX_MODE}
    entrypoint: ["/bin/sh", "/entrypoint.sh"]
    depends_on:
      - api-gateway
      - frontend
    restart: unless-stopped